{"version":3,"sources":["pages/LibItem.js","pages/LibItems.js","pages/PageHome.js","App.js","serviceWorker.js","index.js"],"names":["style","root","borderRadius","padding","background","marginTop","marginLeft","inner","label","margin","color","LibItem","props","href","source","url","textDecoration","display","justifyContent","flexWrap","marginRight","LibItems","map","d","width","height","flexDirection","alignItems","title","jp","fontFamily","fontWeight","fontSize","textShadow","en","PageHome","items","first","second","third","ama","position","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f8dbe2b.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n    root: {\n        borderRadius: '5px',\n        padding: '8px',\n        background: '#fff',\n        marginTop: '11px',\n        marginLeft: '11px',\n    },\n    inner: {\n        padding: '8px 16px',\n        borderRadius: '5px',\n        background: 'rgb(250, 191, 20)',\n    },\n    label: {\n        margin: '0px',\n        color: '#fff',\n    },\n};\n\nfunction LibItem (props) {\n    return (\n        <a href={props.source.url} style={{textDecoration: 'none'}}>\n          <div style={style.root}>\n            <div style={style.inner}>\n              <p style={style.label}>\n                {props.source.label}\n              </p>\n            </div>\n          </div>\n        </a>\n    );\n}\n\nexport default LibItem;\n","import React from 'react';\n\nimport LibItem from './LibItem';\n\nconst style = {\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        marginLeft: '88px',\n        marginRight: '88px',\n        marginTop: '11px',\n    },\n};\n\nfunction LibItems (props) {\n\n    return (\n        <div style={style.root}>\n          {props.source.map((d) => {\n              return <LibItem source={d} />;\n          })}\n        </div>\n    );\n}\n\nexport default LibItems;\n","import React from 'react';\n\nimport LibItems from './LibItems';\n\nconst style = {\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    title: {\n        jp: {\n            fontFamily: \"Sawarabi Mincho\",\n            color: \"rgb(153,0,0)\",\n            fontWeight: 'bold',\n            fontSize: '33px',\n            textShadow: '0px 0px 11px rgb(250, 191, 20)',\n        },\n        en: {\n            fontFamily: \"Sawarabi Mincho\",\n            color: \"rgb(255,0,0)\",\n            fontWeight: 'bold',\n            fontSize: '88px',\n            textShadow: '0px 0px 11px rgb(250, 191, 20)',\n        },\n    }\n};\n\nfunction PageHome () {\n    let items = {\n        // 一軍\n        first: [\n            { label: 'D3.Svg',        url: 'https://github.com/yanqirenshi/D3.Svg' },\n            { label: 'D3.Network',    url: 'https://github.com/yanqirenshi/D3.Network' },\n            { label: 'D3.Deployment', url: 'https://github.com/yanqirenshi/D3.Deployment' },\n            { label: 'D3.ER',         url: 'https://github.com/yanqirenshi/D3.ER' },\n            { label: 'D3.TER',        url: 'https://github.com/yanqirenshi/D3.TER' },\n            { label: 'D3.Sitemap',    url: 'https://github.com/yanqirenshi/D3.Sitemap' },\n            { label: 'D3.Wireframe',  url: 'https://github.com/yanqirenshi/D3.Wireframe' },\n        ],\n        // 二軍\n        second: [\n            { label: 'D3.Sketch',     url: 'https://github.com/yanqirenshi/D3.Sketch' },\n            { label: 'D3.Yabane',     url: 'https://github.com/yanqirenshi/D3.Yabane' },\n        ],\n        // 三軍\n        third: [\n            { label: 'D3.Pad',        url: 'https://github.com/yanqirenshi/D3.Pad' },\n            { label: 'D3.Components', url: 'https://github.com/yanqirenshi/D3.Components' },\n            { label: 'D3.Classes',    url: 'https://github.com/yanqirenshi/D3.Classes' },\n        ],\n        // アマ\n        ama: [\n            { label: 'D3.Pile',       url: 'https://github.com/yanqirenshi/D3.Pile' },\n            { label: 'D3.Bubble',     url: 'https://github.com/yanqirenshi/D3.Bubble' },\n        ],\n    };\n\n    return (\n        <div style={style.root}>\n          <div style={style.title}>\n            <p>\n              <span style={style.title.jp}>きっと何者にもなれない</span>\n              <span style={style.title.en}>Asshole</span>\n              <span style={style.title.jp}>たちに告げる。</span>\n            </p>\n          </div>\n\n          <div>\n            <LibItems source={items.first}/>\n            <LibItems source={items.second}/>\n            <LibItems source={items.third}/>\n            <LibItems source={items.ama}/>\n          </div>\n        </div>\n    );\n}\n\nexport default PageHome;\n","import React from 'react';\n\nimport PageHome from './pages/PageHome';\n\nconst style = {\n    root: {\n        position: 'fixed',\n        width: '100vw',\n        height: '100vh',\n        background: '#fce2c4',\n    }\n};\n\nfunction App() {\n  return (\n      <div style={style.root}>\n        <PageHome />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}